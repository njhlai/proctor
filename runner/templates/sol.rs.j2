{% if datastructs -%}
{% for struct in datastructs -%}
use libproctor::{{ struct.0 }}::{{ struct.1 }};
{% endfor %}
{% endif -%}
struct Solution;

//>>>>>
{{ code }}
//<<<<<

#[cfg(test)]
mod tests {
    use super::*;
    {%- if examples -%}
    {% for example in examples %}

    #[test]
    fn case_{{ loop.index }}() {
        {% for variable in variables -%}
        let {{ variable.0 }} = {{ example | nth(n=loop.index0) | process(lang="rs",type=variable.1) }};
        {% endfor %}
        let expected_output = ; // fill in expected result here
        let output = Solution::{{ function }}({% for variable in variables -%}
        {{ variable.0 }}{% if not loop.last %}, {% endif -%}
        {% endfor %});

        let info_msg = format!("Input: {% for variable in variables -%}
        {{ variable.0 }} = {:?}{% if not loop.last %}, {% endif -%}
        {% endfor %}", {% for variable in variables -%}
        {{ variable.0 }}{% if not loop.last %}, {% endif -%}
        {% endfor %});
        assert_eq!(output, expected_output, "{}", info_msg);
    }
    {%- endfor %}
    {%- endif %}
}
